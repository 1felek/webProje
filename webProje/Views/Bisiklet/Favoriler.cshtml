@model List<Bisiklet>
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
<style>
    table {
        width: 100%;
        border: 1px solid black;
    }

    th {
        cursor: pointer;
        height: 50px;
    }

    th, td {
        text-align: left;
        padding: 16px;
    }

    td {
        height: 200px;
    }

    tr:nth-child(even) {
        background-color: transparent;
    }
</style>
<body>
    <h1>
        Favorilerim
    </h1>
    <h6>
        @localizer["siralama"]
    </h6>
    <table id="myTable" class="border-dark">
        <tr>
            <!--When a header is clicked, run the sortTable function, with a parameter, 0 for sorting by names, 1 for sorting by country:-->
            <th onclick="sortTable(0)">@localizer["fotograf"]</th>
            <th onclick="sortTable(1)">@localizer["marka"]</th>
            <th onclick="sortTable(2)">@localizer["jantcapi"]</th>
            <th onclick="sortTable(3)">@localizer["materyal"]</th>
            <th onclick="sortTable(4)">@localizer["vitessayisi"]</th>
            <th onclick="sortTable(5)">@localizer["kullanimalani"]</th>
            <th onclick="sortTable(6)">@localizer["frenturu"]</th>
            <th onclick="sortTable(7)">@localizer["suspansiyon"]</th>
        </tr>

        @foreach (var bisiklet in Model)
        {
            <tr>
                <td>
                    <img src="@bisiklet.ID-.png" height=200 width=300 />
                </td>
                <td>
                    @localizer[bisiklet.Marka] @bisiklet.Model
                </td>
                <td>
                    @bisiklet.JantCapi
                </td>
                <td>
                    @localizer[bisiklet.Materyal]
                </td>
                <td>
                    @bisiklet.VitesSayisi
                </td>
                <td>
                    @localizer[bisiklet.KullanimAlani]
                </td>
                <td>
                    @localizer[bisiklet.FrenTuru]
                </td>
                <td>
                    @localizer[bisiklet.SuspansiyonTuru]
                </td>
                <td>
                    add
                </td>
            </tr>

        }


    </table>
    <script>
            function sortTable(n) {
                var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("myTable");
                switching = true;
                //Set the sorting direction to ascending:
                dir = "asc";
                /*Make a loop that will continue until
                no switching has been done:*/
                while (switching) {
                    //start by saying: no switching is done:
                    switching = false;
                    rows = table.rows;
                    /*Loop through all table rows (except the
                    first, which contains table headers):*/
                    for (i = 1; i < (rows.length - 1); i++) {
                        //start by saying there should be no switching:
                        shouldSwitch = false;
                        /*Get the two elements you want to compare,
                        one from current row and one from the next:*/
                        x = rows[i].getElementsByTagName("TD")[n];
                        y = rows[i + 1].getElementsByTagName("TD")[n];
                        /*check if the two rows should switch place,
                        based on the direction, asc or desc:*/
                        if (dir == "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        //Each time a switch is done, increase this count by 1:
                        switchcount++;
                    } else {
                        /*If no switching has been done AND the direction is "asc",
                        set the direction to "desc" and run the while loop again.*/
                        if (switchcount == 0 && dir == "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
            }
    </script>
</body>